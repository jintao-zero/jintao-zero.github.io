<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Golang | jintao's blog]]></title>
  <link href="http://jintao-zero.github.io/blog/tags/golang/atom.xml" rel="self"/>
  <link href="http://jintao-zero.github.io/"/>
  <updated>2017-01-08T23:11:27+08:00</updated>
  <id>http://jintao-zero.github.io/</id>
  <author>
    <name><![CDATA[jintao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Golang 通过http服务获取程序性能统计数据]]></title>
    <link href="http://jintao-zero.github.io/blog/2017/01/08/golang-tong-guo-httpfu-wu-huo-qu-cheng-xu-xing-neng-tong-ji-shu-ju/"/>
    <updated>2017-01-08T22:55:07+08:00</updated>
    <id>http://jintao-zero.github.io/blog/2017/01/08/golang-tong-guo-httpfu-wu-huo-qu-cheng-xu-xing-neng-tong-ji-shu-ju</id>
    <content type="html"><![CDATA[<p>Golang标准库<code>net/http/pprof</code>通过HTTP服务对外提供性能统计数据，以便<code>pprof</code>这样的可视化工具使用。</p>

<p>引入此<code>pprof</code>库向http服务注册路径处理函数。此库注册的http服务路径都是以<code>/debug/pprof</code>开头。</p>

<h2>使用方法</h2>

<h3>方式引入库</h3>

<pre><code>import _ "net/http/pprof"
</code></pre>

<h3>开启HTTP服务</h3>

<p>如果程序中已经运行了一个或者多个HTTP服务，那么就无需再开启HTTP服务，否则需要像如下代码片段，开启一个HTTP服务：</p>

<pre><code>go func() {
    log.Println(http.ListenAndServe("localhost:6060",   nil))
}()
</code></pre>

<p>其中地址也可以不绑定到localhost,可以选择监听所有端口,比如:</p>

<pre><code>go func() {
    log.Println(http.ListenAndServe(":6060",    nil))
}()
</code></pre>

<h3>获取性能数据</h3>

<p>1、查看堆栈性能数据</p>

<pre><code>go tool pprof http://localhost:6060/debug/pprof/heap
</code></pre>

<p>2、查看30s CPU性能数据</p>

<pre><code>go tool pprof http://localhost:6060/debug/pprof/profile
</code></pre>

<p>3、查看goroutine阻塞性能数据</p>

<pre><code>go tool pprof http://localhost:6060/debug/pprof/block
</code></pre>

<p>4、查看5s执行栈</p>

<pre><code>wget http://localhost:6060/debug/pprof/trace?seconds=5
</code></pre>

<p>5、查看所有可用性能数据</p>

<pre><code>浏览器打开  http://localhost:6060/debug/pprof/
</code></pre>

<p>参考：<br/>
<a href="https://golang.org/pkg/net/http/pprof/">Golang官博</a></p>
]]></content>
  </entry>
  
</feed>
